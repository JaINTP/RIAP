<UserControl x:Class="JaINTP.RIAP.Views.MainView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:mah="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:converters="clr-namespace:JaINTP.RIAP.Utilities.Converters"
             xmlns:behaviours="clr-namespace:JaINTP.RIAP.Utilities.Behaviours"
             xmlns:md="https://github.com/fantasticfiasco/mvvm-dialogs"
             md:DialogServiceViews.IsRegistered="True"
             mc:Ignorable="d"
             DataContext="{Binding MainViewModel,
                                   Source={StaticResource Locator}}">
    <UserControl.Resources>
        <!-- Converters. -->
        <converters:InverseBooleanConverter x:Key="InverseBooleanConverter" />
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        <converters:PathToFileNameConverter x:Key="PathToFileNameConverter" />

        <!-- Styles -->
        <Style TargetType="{x:Type mah:NumericUpDown}"
               BasedOn="{StaticResource {x:Type mah:NumericUpDown}}">
            <Setter Property="IsEnabled"
                    Value="{Binding Path=IsRunning,
                                    Converter={StaticResource InverseBooleanConverter}}" />
            <Setter Property="Width"
                    Value="70" />
        </Style>

        <Style TargetType="{x:Type Button}" />
    </UserControl.Resources>

    <StackPanel Orientation="Horizontal">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="2" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <ListBox x:Name="FileListBox"
                     Grid.ColumnSpan="3"
                     BorderThickness="1"
                     Margin="0,0,0,5"
                     ScrollViewer.VerticalScrollBarVisibility="Auto"
                     ItemsSource="{Binding Path=FileList,
                                           Mode=TwoWay,
                                           UpdateSourceTrigger=PropertyChanged}"
                     SelectionMode="Multiple">
                <i:Interaction.Behaviors>
                    <behaviours:ListBoxSelectedItemsBehavior
                        SelectedItems="{Binding SelectedFiles,
                                        Mode=TwoWay}" />
                </i:Interaction.Behaviors>
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding Converter={StaticResource PathToFileNameConverter}}" />
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>

            <Button Grid.Column="0"
                    Grid.Row="1"
                    Content="Add"
                    Height="27"
                    Width="98"
                    Command="{Binding AddCommand}" />
            <Button Grid.Column="2"
                    Grid.Row="1"
                    Content="Remove"
                    Height="27"
                    Width="98"
                    Command="{Binding RemoveCommand}">
                <Button.Style>
                    <Style>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ElementName=FileListBox,
                                               Path=SelectedIndex}"
                             Value="-1">
                                <Setter Property="Button.IsEnabled"
                            Value="False" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
        </Grid>

        <Grid Grid.Column="2"
              HorizontalAlignment="Right">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <!-- Maximum. -->
            <Label Content="Maximum:"
                   Grid.Column="0"
                   Grid.Row="0" />
            <mah:NumericUpDown Grid.Column="1"
                               Grid.Row="0"
                               Minimum="0"
                               Maximum="60"
                               Value="{Binding MaxMinutes}" />
            <Label Content="mins"
                   Grid.Column="2"
                   Grid.Row="0" />
            <mah:NumericUpDown Grid.Column="3"
                               Grid.Row="0"
                               Minimum="1"
                               Maximum="59"
                               Value="{Binding MaxSeconds}" />
            <Label Content="secs"
                   Grid.Column="4"
                   Grid.Row="0" />

            <!-- Minimum. -->
            <Label Content="Minimum:"
                   Grid.Column="0"
                   Grid.Row="1" />
            <mah:NumericUpDown Grid.Column="1"
                               Grid.Row="1"
                               Minimum="0"
                               Maximum="60"
                               Value="{Binding MinMinutes}" />
            <Label Content="mins"
                   Grid.Column="2"
                   Grid.Row="1" />
            <mah:NumericUpDown Grid.Column="3"
                               Grid.Row="1"
                               Minimum="1"
                               Maximum="59"
                               Value="{Binding MinSeconds}" />
            <Label Content="secs"
                   Grid.Column="4"
                   Grid.Row="1" />

            <Label Content="Volume:"
                   Grid.Column="0"
                   Grid.Row="2" />
            <Slider Grid.Column="1"
                    x:Name="VolSlider"
                    Grid.ColumnSpan="3"
                    Grid.Row="2"
                    Margin="1,5"
                    mah:SliderHelper.ChangeValueBy="LargeChange"
                    mah:SliderHelper.EnableMouseWheel="MouseHover"
                    VerticalAlignment="Center"
                    LargeChange="10"
                    Maximum="1.00"
                    Minimum="0.00"
                    Orientation="Horizontal"
                    SmallChange="0.01"
                    TickFrequency="0.05"
                    TickPlacement="BottomRight"
                    Value="{Binding Volume}" />
            <Label Grid.Column="4"
                   Grid.Row="2"
                   Width="39"
                   Content="{Binding Volume}"
                   HorizontalContentAlignment="Right"
                   ContentStringFormat="{}{0,4:P0}" />

            <!-- Button and progress bar -->
            <mah:MetroProgressBar Grid.Column="0"
                                  Grid.ColumnSpan="3"
                                  Grid.Row="4"
                                  IsIndeterminate="True"
                                  IsEnabled="True"
                                  Value="1"
                                  Visibility="{Binding Path=IsRunning,
                                                       Converter={StaticResource BooleanToVisibilityConverter},
                                                       Mode=TwoWay}" />

            <Button Grid.Column="3"
                    Grid.ColumnSpan="2"
                    Grid.Row="4"
                    Height="27"
                    Width="98"
                    Content="{Binding StartStopContent}"
                    Command="{Binding StartStopCommand}">
                <Button.Style>
                    <Style>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Path=IsRunning}"
                                         Value="True">
                                <Setter Property="Button.Content"
                                        Value="Stop" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Path=IsRunning}"
                                         Value="False">
                                <Setter Property="Button.Content"
                                        Value="Start" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ElementName=FileListBox,
                                                           Path=HasItems}"
                                         Value="false">
                                <Setter Property="Button.IsEnabled"
                                Value="false" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
        </Grid>
    </StackPanel>
</UserControl>